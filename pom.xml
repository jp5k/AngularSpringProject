<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ecclesiastical</groupId>
    <artifactId>EccDeployer</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>

    <properties>
        <spring.version>4.3.10.RELEASE</spring.version>
        <junit.version>3.8.1</junit.version>
        <maven.clean.version>3.0.0</maven.clean.version>
        <maven.compiler.version>3.6.2</maven.compiler.version>
        <maven.exec.version>1.6.0</maven.exec.version>
        <maven.war.version>3.1.0</maven.war.version>
        <frontend.maven.version>1.5</frontend.maven.version>
        <node.version>7.7.1</node.version>
        <npm.version>4.2.0</npm.version>
        <jackson.version>2.9.0</jackson.version>
        <!-- constants -->
        <frontend.path>src/frontend</frontend.path>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- spring-context which provides core functionality -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- The spring-aop module provides an AOP Alliance-compliant aspect-oriented
            programming implementation allowing you to define -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- The spring-webmvc module (also known as the Web-Servlet module) contains
            Springâ€™s model-view-controller (MVC) and REST Web Services implementation
            for web applications -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- The spring-web module provides basic web-oriented integration features
            such as multipart file upload functionality and the initialization of the
            IoC container using Servlet listeners and a web-oriented application context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

    </dependencies>

    <build>
        <sourceDirectory>src/server/main/java</sourceDirectory>
            <plugins>
                <!-- clean -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.version}</version>
                    <configuration>
                        <failOnError>false</failOnError>
                        <filesets>
                            <fileset>
                                <directory>.</directory>
                                <includes>
                                    <include>dist/**/*.*</include>
                                </includes>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <!-- copy angular resources -->
                <!--
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-angular2-dir</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.basedir}/target/angular</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/frontend</directory>
                                        <includes>
                                            <include>carrental/**/*.*</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                -->
                <!-- build frontend -->
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend.maven.version}</version>
                    <configuration>
                        <workingDirectory>src/frontend</workingDirectory>
                        <skip>false</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>install node and npm</id>
                            <goals>
                                <goal>install-node-and-npm</goal>
                            </goals>
                            <configuration>
                                <nodeVersion>${node.version}</nodeVersion>
                                <npmVersion>${npm.version}</npmVersion>
                            </configuration>
                        </execution>

                        <execution>
                            <id>npm install</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>install</arguments>
                            </configuration>
                        </execution>

                        <execution>
                            <id>prod</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>run-script prod</arguments>
                            </configuration>
                            <phase>generate-resources</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- copy resources -->
                <!-- compile -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

                <!-- Create war file
                    this will create a target dir in the root of the project and build the war there
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.version}</version>
                    <configuration>
                        <warSourceDirectory>/webapp</warSourceDirectory>
                        <webXml>webapp/WEB-INF/web.xml</webXml>
                        <webResources>
                            <resource>
                                <directory>webapp/WEB-INF</directory>
                                <filtering>true</filtering>
                                <includes>
                                    <include>**/*</include>
                                </includes>
                                <targetPath>WEB-INF</targetPath>
                            </resource>
<!--
                            <resource>
                                <directory>webapp/WEB-INF/views</directory>
                                <filtering>true</filtering>
                                <includes>
                                    <include>**/*</include>
                                </includes>
                                <targetPath>WEB-INF</targetPath>
                            </resource>
-->
                            <resource>
                                <directory>${project.basedir}/src/frontend/dist</directory>
<!--
                                <targetPath></targetPath>
-->
                                <includes>
                                    <include>assets/**/*.*</include>
                                    <include>*.*</include>
                                </includes>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>
            </plugins>
    </build>

</project>